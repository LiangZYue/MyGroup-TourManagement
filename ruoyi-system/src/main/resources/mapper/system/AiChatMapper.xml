<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.AiChatMapper">
    
    <resultMap type="AiChat" id="AiChatResult">
        <id     property="id"       column="id"        />
        <result property="userId"   column="user_id"   />
        <result property="userInput" column="user_input" />
        <result property="aiResponse" column="ai_response" />
        <result property="timestamp" column="timestamp" />
        <result property="status"    column="status"    />
        <result property="delFlag"   column="del_flag"  />
        <result property="createBy"  column="create_by" />
        <result property="createTime" column="create_time" />
        <result property="updateBy"  column="update_by"  />
        <result property="updateTime" column="update_time" />
    </resultMap>

    <sql id="selectAiChatVo">
        select id, user_id, user_input, ai_response, timestamp, status, del_flag, 
        create_by, create_time, update_by, update_time
        from ai_chat
    </sql>

    <select id="selectAiChatList" parameterType="AiChat" resultMap="AiChatResult">
        <include refid="selectAiChatVo"/>
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            AND del_flag = '0'
        </where>
        order by timestamp desc
    </select>

    <select id="selectAiChatHistoryByUserId" parameterType="Long" resultMap="AiChatResult">
        <include refid="selectAiChatVo"/>
        where user_id = #{userId} and del_flag = '0'
        order by timestamp desc
    </select>

    <insert id="insertAiChat" parameterType="AiChat" useGeneratedKeys="true" keyProperty="id">
        insert into ai_chat (
            user_id,
            user_input,
            ai_response,
            timestamp,
            status,
            del_flag,
            create_by,
            create_time,
            update_by,
            update_time
        ) values (
            #{userId},
            #{userInput},
            #{aiResponse},
            #{timestamp},
            #{status},
            '0',
            #{createBy},
            sysdate(),
            #{updateBy},
            sysdate()
        )
    </insert>

    <delete id="deleteAiChatByIds" parameterType="Long">
        update ai_chat set del_flag = '2'
        where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>